{"ast":null,"code":"var _jsxFileName = \"/Users/siyao/Documents/GitHub/pints_coding_task/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Row } from 'react-bootstrap';\nimport StatisticsWidget from './widget';\nimport axios from 'axios';\n// import './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stocks = [{\n  name: 'aapl'\n}, {\n  name: 'tsla'\n}, {\n  name: 'goog'\n}, {\n  name: 'amzn'\n}, {\n  name: 'tsla'\n}];\n;\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n\n  // const fetchData = async () => {\n  //   stocks.forEach(async (stock) => {\n  //     const res = await axios.get(`/api/stock_info?stock=${stock.name}`);\n\n  // };\n  useEffect(() => {\n    // axios.get<Blob>('/api/stock_info', { responseType: 'blob' })\n    //   .then(response => setImg(URL.createObjectURL(response.data)))\n    //   .catch(error => console.error(error));\n    // fetchData();\n    var stock_info = [];\n    stocks.forEach(async stock => {\n      const res = await axios.get(`/api/stock_info?stock=${stock.name}`);\n      stock_info.push(res.data);\n    });\n    setData(stock_info);\n  }, []);\n  (data || []).map(_ref => {\n    let {\n      symbol,\n      name,\n      price,\n      change,\n      percent_change\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(StatisticsWidget, {\n        symbol: symbol,\n        name: name,\n        price: price,\n        change: change,\n        percent_change: percent_change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  });\n\n  // return (\n  //   <Row>\n  //     {(data || []).map(({ symbol, name, price, change, percent_change }: StatisticsProps) => {\n  //       return (\n  //         <Col xl={6} key={symbol}>\n  //           <StatisticsWidget symbol={symbol} name={name} price={price} change={change} percent_change={percent_change} />\n  //         </Col>\n  //       );\n  //     })}\n  //   </Row>\n  // );\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\n\n// const [img, setImg] = useState('');\n\n// const fetchData = async () => {\n//   const res = await axios({\n//     method: 'get',\n//     url: `https://storage.googleapis.com/iex/api/logos/AAPL.png`,\n//     responseType: 'blob',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       'Access-Control-Allow-Origin': '*',\n//       'Access-Control-Allow-Credentials': true,\n//       'mode': 'no-cors'\n//     }\n//   });\n//   const imageObjectURL = URL.createObjectURL(res.data);\n//   console.log(imageObjectURL);\n//   setImg(imageObjectURL);\n// };\n// const [data, setData] = useState({});\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Row","StatisticsWidget","axios","jsxDEV","_jsxDEV","stocks","name","App","_s","data","setData","stock_info","forEach","stock","res","get","push","map","_ref","symbol","price","change","percent_change","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siyao/Documents/GitHub/pints_coding_task/frontend/src/App.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport StatisticsWidget from './widget';\nimport axios from 'axios';\n// import './App.css';\nconst stocks = [{ name: 'aapl' }, { name: 'tsla' }, { name: 'goog' }, { name: 'amzn' }, { name: 'tsla' }];\n\ninterface StatisticsProps {\n  symbol?: string;\n  name?: string;\n  price?: string;\n  change?: string;\n  percent_change?: string;\n};\n\nfunction App() {\n  const [data, setData] = useState<StatisticsProps[]>([]);\n\n  // const fetchData = async () => {\n  //   stocks.forEach(async (stock) => {\n  //     const res = await axios.get(`/api/stock_info?stock=${stock.name}`);\n\n  // };\n  useEffect(() => {\n    // axios.get<Blob>('/api/stock_info', { responseType: 'blob' })\n    //   .then(response => setImg(URL.createObjectURL(response.data)))\n    //   .catch(error => console.error(error));\n    // fetchData();\n    var stock_info: StatisticsProps[] = [];\n    stocks.forEach(async (stock) => {\n      const res = await axios.get(`/api/stock_info?stock=${stock.name}`);\n      stock_info.push(res.data);\n    });\n    setData(stock_info);\n  }, []);\n\n  (data || []).map(({ symbol, name, price, change, percent_change }: StatisticsProps) => {\n    return (\n      <Row>\n        <StatisticsWidget symbol={symbol} name={name} price={price} change={change} percent_change={percent_change} />\n      </Row>\n    );\n  });\n\n  // return (\n  //   <Row>\n  //     {(data || []).map(({ symbol, name, price, change, percent_change }: StatisticsProps) => {\n  //       return (\n  //         <Col xl={6} key={symbol}>\n  //           <StatisticsWidget symbol={symbol} name={name} price={price} change={change} percent_change={percent_change} />\n  //         </Col>\n  //       );\n  //     })}\n  //   </Row>\n  // );\n}\n\nexport default App;\n\n// const [img, setImg] = useState('');\n\n  // const fetchData = async () => {\n  //   const res = await axios({\n  //     method: 'get',\n  //     url: `https://storage.googleapis.com/iex/api/logos/AAPL.png`,\n  //     responseType: 'blob',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Access-Control-Allow-Origin': '*',\n  //       'Access-Control-Allow-Credentials': true,\n  //       'mode': 'no-cors'\n  //     }\n  //   });\n  //   const imageObjectURL = URL.createObjectURL(res.data);\n  //   console.log(imageObjectURL);\n  //   setImg(imageObjectURL);\n  // };\n  // const [data, setData] = useState({});"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAa,iBAAiB;AAC1C,OAAOC,gBAAgB,MAAM,UAAU;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EAAE;EAAEA,IAAI,EAAE;AAAO,CAAC,EAAE;EAAEA,IAAI,EAAE;AAAO,CAAC,EAAE;EAAEA,IAAI,EAAE;AAAO,CAAC,EAAE;EAAEA,IAAI,EAAE;AAAO,CAAC,CAAC;AAQxG;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAoB,EAAE,CAAC;;EAEvD;EACA;EACA;;EAEA;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA,IAAIY,UAA6B,GAAG,EAAE;IACtCN,MAAM,CAACO,OAAO,CAAC,MAAOC,KAAK,IAAK;MAC9B,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,yBAAwBF,KAAK,CAACP,IAAK,EAAC,CAAC;MAClEK,UAAU,CAACK,IAAI,CAACF,GAAG,CAACL,IAAI,CAAC;IAC3B,CAAC,CAAC;IACFC,OAAO,CAACC,UAAU,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,CAACF,IAAI,IAAI,EAAE,EAAEQ,GAAG,CAACC,IAAA,IAAsE;IAAA,IAArE;MAAEC,MAAM;MAAEb,IAAI;MAAEc,KAAK;MAAEC,MAAM;MAAEC;IAAgC,CAAC,GAAAJ,IAAA;IAChF,oBACEd,OAAA,CAACJ,GAAG;MAAAuB,QAAA,eACFnB,OAAA,CAACH,gBAAgB;QAACkB,MAAM,EAAEA,MAAO;QAACb,IAAI,EAAEA,IAAK;QAACc,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAEA,MAAO;QAACC,cAAc,EAAEA;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1G;EAEV,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACnB,EAAA,CAxCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA0CZ,eAAeA,GAAG;;AAElB;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}