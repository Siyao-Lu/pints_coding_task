{"ast":null,"code":"var _jsxFileName = \"/Users/siyao/Documents/GitHub/pints_coding_task/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport StatisticsWidget from './widget';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stocks = ['aapl', 'nflx', 'goog', 'amzn', 'tsla']; // static list of stocks\n\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var list = [];\n        // sequential requests since data set is small, could have used Promise.all for parallel performance and dynamic stock list\n        for (const stock of stocks) {\n          const res = await axios.get(`/api/stock_info?stock=${stock}`);\n          list.push(res.data);\n        }\n        setData(list);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n    ;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && data.map(stock => /*#__PURE__*/_jsxDEV(StatisticsWidget, {\n      info: stock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","StatisticsWidget","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","stocks","App","_s","data","setData","fetchData","list","stock","res","get","push","e","console","log","children","map","info","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siyao/Documents/GitHub/pints_coding_task/frontend/src/App.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport StatisticsWidget from './widget';\nimport axios from 'axios';\nimport { StockTypes } from './data';\n\nconst stocks = ['aapl', 'nflx', 'goog', 'amzn', 'tsla']; // static list of stocks\n\nconst App = () => {\n  const [data, setData] = useState<StockTypes[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var list = [];\n        // sequential requests since data set is small, could have used Promise.all for parallel performance and dynamic stock list\n        for (const stock of stocks) {\n          const res = await axios.get(`/api/stock_info?stock=${stock}`);\n          list.push(res.data);\n        }\n        setData(list);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();;\n  }, []);\n\n  return (\n    <>\n      {data && data.map((stock) =>\n        <StatisticsWidget info={stock} />\n      )}\n    </>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,UAAU;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAe,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAIC,IAAI,GAAG,EAAE;QACb;QACA,KAAK,MAAMC,KAAK,IAAIP,MAAM,EAAE;UAC1B,MAAMQ,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,yBAAwBF,KAAM,EAAC,CAAC;UAC7DD,IAAI,CAACI,IAAI,CAACF,GAAG,CAACL,IAAI,CAAC;QACrB;QACAC,OAAO,CAACE,IAAI,CAAC;MACf,CAAC,CAAC,OAAOK,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB;IACF,CAAC;IACDN,SAAS,EAAE;IAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACGX,IAAI,IAAIA,IAAI,CAACY,GAAG,CAAER,KAAK,iBACtBV,OAAA,CAACH,gBAAgB;MAACsB,IAAI,EAAET;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAClC,iBACA;AAEP,CAAC;AAAClB,EAAA,CA3BID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}